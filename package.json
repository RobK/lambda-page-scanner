{
    "config": {
        "email": "robert.kehoe@f-secure.com",
        "cloudFormationStackName": "lambda-page-scanner"
    },
    "scripts": {

        "win-config": "node configure.js",
        "win-local": "node -e \"require('./lambda.js').handler(require('./api-gateway-event.json'), {succeed: v => { console.log(v); process.exit(0); }}, (e, v) => { console.log(v); process.exit(1); })\"",
        "win-invoke-lambda": "aws lambda invoke --function-name AwsServerlessExpressFunction --region %npm_package_config_region% --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
        "win-create-bucket": "aws s3 mb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
        "win-delete-bucket": "aws s3 rm s3://%npm_package_config_s3BucketName%/lambda-function.zip --region %npm_package_config_region%; aws s3 rm s3://%npm_package_config_s3BucketName%/simple-proxy-api.yaml --region %npm_package_config_region%; aws s3 rb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
        "win-upload-api-gateway-swagger": "aws s3 cp ./simple-proxy-api.yaml s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",

        "win-create-stack": "aws cloudformation create-stack --stack-name %npm_package_config_cloudFormationStackName% --template-body file://./cloudformation.json --capabilities CAPABILITY_IAM --parameters ParameterKey=AwsServerlessExpressS3Bucket,ParameterValue=%npm_package_config_s3BucketName% --region %npm_package_config_region%",
        "win-update-stack": "aws cloudformation update-stack --stack-name %npm_package_config_cloudFormationStackName% --template-body file://./cloudformation.json --capabilities CAPABILITY_IAM --parameters ParameterKey=AwsServerlessExpressS3Bucket,ParameterValue=%npm_package_config_s3BucketName% --region %npm_package_config_region%",
        "win-delete-stack": "aws cloudformation delete-stack --stack-name %npm_package_config_cloudFormationStackName% --region %npm_package_config_region%",
        "win-package-function": "7z a lambda-function.zip -r lambda.js app.js index.html node_modules",
        "win-upload-function": "aws s3 cp ./lambda-function.zip s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
        "win-update-function": "aws lambda update-function-code --function-name AwsServerlessExpressFunction --region %npm_package_config_region% --zip-file fileb://lambda-function.zip",
        "win-package-upload-function": "npm run win-package-function && npm run win-upload-function",
        "win-upload-update-function": "npm run win-upload-function && npm run win-update-function",
        "win-package-upload-update-function": "npm run win-package-upload-function && npm run win-update-function",
        "win-setup": "npm install && (aws s3api get-bucket-location --bucket %npm_package_config_s3BucketName% --region %npm_package_config_region% || npm run win-create-bucket) && npm run win-package-upload-function && npm run win-upload-api-gateway-swagger && npm run win-create-stack"
    },
    "name": "application-name",
    "version": "0.0.1"
}